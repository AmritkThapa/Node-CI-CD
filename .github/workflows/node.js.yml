# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [v20.18.1]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build the app (if present)
      run: npm run build --if-present

    - name: Run tests
      run: npm test

    - name: Check private key content
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}"

    - name: Deploy to Server
      env:
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOST_IP: ${{ secrets.HOST_IP }}
        SSH_USER: ${{ secrets.SSH_USER }}
        WORK_DIR: ${{ secrets.WORK_DIR }}
        MAIN_BRANCH: ${{ secrets.MAIN_BRANCH }}
      run: |
        # Store private key to a file
        echo "$PRIVATE_KEY" > private-key.pem
        chmod 600 private-key.pem

        # Create the .ssh directory and add server's SSH host key to known_hosts
        mkdir -p ~/.ssh
        ssh-keyscan -H $HOST_IP >> ~/.ssh/known_hosts

        # SSH into the server, pull the latest changes, and restart the app
        ssh -vvv -i private-key.pem $SSH_USER@$HOST_IP << EOF
          cd $WORK_DIR
          git checkout $MAIN_BRANCH
          git pull
          npm install
          pm2 restart index.js || pm2 start index.js --name "node-app"
        EOF

    - name: Cleanup
      run: rm -f private-key.pem

